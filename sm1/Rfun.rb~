@{<NOTE>
<HEAD1>Functions in R</HEAD1>
Functions play a very important role in R. In this page we shall
summarise some of the important points regarding them. 

<HEAD2>The basic structure</HEAD2>
A function is like a machine. It has
<UL>
<LI>zero or more input(s),</LI>
<LI>one or more output(s),</LI>
<LI>possible some side-effect(s).</LI>
</UL>
Here is a simple function in R:
<R>
myfun = function(x,y) {
  z = x+y
  cat("The difference = ',x-y,'\n')
  sin(z)
}
</R>
The name of the function is <CODE>myfun</CODE> (any name of your
choice, as long as it does not clash with any keyword of R). The
word <CODE>function</CODE> is a keyword. The inputs to the
function are listed (comma-separated) inside the <CODE>(</CODE>
... <CODE>)</CODE>. The parentheses are complulsory wven if there
are no inputs. The input names are dummy variables (has nothing
to do with other variables with the same name). More on this
later. The inputs are called the <B>arguments</B> or
the <B>parameters</B> of the function. 
<P/>
The body of the function  comes next, inside a pairs of braces
(optional if the body consists of a single statement).

<P/>
In body of the function consists of one or more statements, each
of which serve one or more of the these three purposes:
<UL>
<LI>internal computation, e.g., the line <CODE>z = x+y</CODE>
computes <CODE>z</CODE>, which is not visible from outside the function.</LI>
<LI>side-effect, e.g., the line <CODE>cat("The difference =
',x-y,'\n')</CODE> prints a line on the screen.</LI>
<LI>output, i.e., the last line outputs <CODE>sin(z)</CODE>.</LI>
</UL>
</NOTE>@}
