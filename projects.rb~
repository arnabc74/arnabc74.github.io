@{<NOTE>
<HEAD1>Projects</HEAD1>
Each group of 5 or 6 students will do a single project. They have
to either come up with their own project idea (to be ratified by
me), or they have to choose one from the following list of
projects. Same project may be chosen by more than one group. You
may use R or Python or Java or C or C++. No project specific
library is allowed.
<OL>
<LI><B>Chroma-keying:</B> See
this <LINK to="https://youtu.be/H8aoUXjSfsI?si=6vGawgx4VGODgVUV">fun
video</LINK> to understand chroma-keying or green-screening as
it is popularly called. Your task will be to work with still
photos with a green (or whatever colour you wish) background,
and to remove it keeping the foreground as intact as
possible. The photos used MUST be taken by the project group
(not downloaded). </LI>
<LI><B>Denoising audio:</B> Record yourself talking in a room
with mild background noise (e.g., with an electric fan or noisy
AC on). Ocassionally pause during talking. Your job is to
automatically process the recorded to audio to identify these
pauses, and to make the pauses absolutely silent.</LI>
<LI><B>Classifying iris flowers:</B> Come up with the ``best
possible'' classifier that will classify the iris flowers using
Anderson's iris data. Coming up with a reasonable definition of
``best possible'' is a major part of the challenge.</LI>
<LI><B>Missile launch planning:</B> This impressive project is
somewhat marred by the fact that the missile involved is just a rubber
band. The launcher consists of a ruler along which the band is
pulled to some known extent before being released. Your job is
to collect data and come up with a formula that tells you how
much to stretch in order to reach a given distance. You must
also give some error bound.</LI>
<LI><B>Distance estimation:</B> This one will require an app
that you need to download from. The app records the ambient audio
for a fixed period (say 2 secs), and then shows the standard
deviation of the values. Hopefully that is the loudness of the
sound. Now stand at different known distances from a noise source, and
see the value shown on the app. Your job is to come up with a
formula to estimate the distance from any given app reading. You
must provide some suitable error bar.</LI>
<LI><B>Skew angle estimation:</B> Any QR code or bar code reader has to
do a skew angle estimation, i.e., estimate the angle at which the object is
tilted w.r.t. the camera. Take a page of parallel lines, and
photograph them from  different angles. </LI>
</OL>
</NOTE>@}
